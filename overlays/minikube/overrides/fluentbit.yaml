apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: fluentbit
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
  labels:
    name: fluentbit
spec:
  source:
    helm:
      values: |-
        service:
          type: ClusterIP
          port: 2020
          labels: {}
          annotations:
            prometheus.io/scrape: "true"
            prometheus.io/scheme: "http"
            prometheus.io/path: "/api/v1/metrics/prometheus"
            prometheus.io/port: "2020"
        serviceMonitor:
          enabled: true
          namespace: monitoring
          interval: 15s
          scrapeTimeout: 10s
          jobLabel: fluentbit
        flush: 1
        logLevel: info
        metricsPort: 2020
        config:
          service: |
            [SERVICE]
              Daemon Off
              Flush {{ .Values.flush }}
              Log_Level {{ .Values.logLevel }}
              Parsers_File parsers.conf
              Parsers_File custom_parsers.conf
              HTTP_Server On
              HTTP_Listen 0.0.0.0
              HTTP_Port {{ .Values.metricsPort }}
              Health_Check On
          inputs: |
            [INPUT]
              Name tail
              Path /var/log/containers/*.log
              multiline.parser docker, cri
              Tag kube.*
              Mem_Buf_Limit 5MB
              Skip_Long_Lines On
          filters: |
            [FILTER]
              Name kubernetes
              Match kube.*
              Merge_Log On
              Keep_Log Off
              K8S-Logging.Parser On
              K8S-Logging.Exclude On
          outputs: ""
          customParsers: |
            [PARSER]
                Name docker_no_time
                Format json
                Time_Keep Off
                Time_Key time
                Time_Format %Y-%m-%dT%H:%M:%S.%L
          extrafiles: {}
